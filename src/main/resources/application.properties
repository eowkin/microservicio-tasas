
################################################################################################################
##                                         Parametros Generales                                               ##
################################################################################################################
#
# * server.port: Puerto po donde incia el servicio
###############
# * microservicio.path.pre  : Prefijo de la direccion url del servicio
##########################
# * microservicio.path.post : Continacion de la URL entre  microservicio.path.pre y microservicio.ambiente 
###########################
# * microservicio.ambiente  : Ambiente donde se despliega el servicio.
#
# des = Desarrollo
# qa = Calidad
# pro = Produccion
#  
# Cuando algun parametro empieza por des,cal o pro, solo se carga el valor de este parametro
# ejem:
# des.mq.hostName=172.15.51.6
# cal.mq.hostName=173.16.52.7
# pro.mq.hostName=174.17.53.8
#
# si el parametro microservicio.ambiente = des , entonces se carga el valor: des.mq.hostName=172.15.51.6
###########################
# * microservicio.medio: Lista de valores validos para el parametro origen , separados por "|"
#######################
################################################################################################################
################################################################################################################

server.port=7080
microservicio.path.pre = /api/
microservicio.ambiente = des
microservicio.codmonedabs = 928

#### DESARROLLO ####
# des.seed.ruta  :  ruta donde se encuentra mi application.properties externo donde se encuentra el Key de encriptacion
#######################
des.seed.ruta = /app/microservicios/logs/




#### DESARROLLO ####
#des.db.user= C14405
#des.db.password= Cumana01*
#des.db.url= jdbc:postgresql://172.19.148.50:5432/Convenio1

####  CALIDAD   ####
#qa.db.user= 
#qa.db.password= 
#qa.db.url=

#### PRODUCCION ####
#pro.db.user= 
#pro.db.password=
#pro.db.url= 


#######CONEXION CON BD LOCALHOST#########
#DATASOURCE (POSTGRES 11.0)
#spring.datasource.driver-class-name=org.postgresql.Driver
#spring.datasource.url=jdbc:postgresql://localhost/Convenio1
#spring.datasource.username=3LjUdTAltpnz6l2u2sBliDCmdiL7mZ2N
#spring.datasource.password=zbPKaDmLkwj+kPYhReegbCWBoefS

#######CONEXION CON BD BANCO#########
#DATASOURCE (POSTGRES 11.0)
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.url= jdbc:postgresql://172.19.148.50:5432/Convenio1
spring.datasource.username= 7+aTNWdivaxFBEDbFJ5e82iLplFKqA==
spring.datasource.password= 76LKYDk249vwnlpD4Gzf6FD9bM7sxqkloQ==




#JPA
spring.jpa.hibernate.ddl-auto= none
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.open-in-view=true
spring.jpa.show-sql=false
#logging.level.org.hibernate.sql=debug
spring.jpa.hibernate.naming.physical-strategy= org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
#spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl



#######CREANDO POOL DE CONEXION#########

# 1.Máximo número de milisegundos que el cliente debería esperar por una conexión desde el pool
spring.datasource.hikari.connection-timeout = 20000

# 2.Mínimo número de conexiones inactivas mantenidas por HikariCP en el pool de conexiones:
spring.datasource.hikari.minimum-idle = 10

# 3.Máximo número de conexiones en el pool: 
spring.datasource.hikari.maximum-pool-size = 10

# 4.Cantidad máxima de tiempo en milisegundos que una conexión puede permanecer inactiva en el pool
spring.datasource.hikari.idle-timeout=10000

# 5.Tiempo de vida máximo en milisegundos de una conexión en el pool después de que se cierra:
spring.datasource.hikari.max-lifetime = 1000

# 6.Comportamiento de commit automático (finalización automática de transacciones para las conexiones retornadas desde pool. El valor predeterminado es true:
spring.datasource.hikari.auto-commit = true






################################################################################################################
##                                            Web Service Auditoria                                           ##
################################################################################################################
#
# * registrarAudit.ReadTimeout : Tiempo de espera de lectura
###############################
# * registrarAudit.ConnectTimeout: Tiempo de expera de conexion
#################################
# * registrarAudit.ConnectionRequestTimeout: Tiempo de espera de la conexion de la peticion
###########################################
# * [ambiente].registrarAudit.url : Direccion del web service de registro de auditoria
#################################
################################################################################################################
################################################################################################################

registrarAudit.ReadTimeout =10000
registrarAudit.ConnectTimeout= 10000
registrarAudit.ConnectionRequestTimeout =10000

#### DESARROLLO ####
des.registrarAudit.url = http://172.19.148.48:7003/microservices/des/registrar-auditoria
####  CALIDAD   ####
qa.registrarAudit.url = http://localhost:7003/microservices/qa/registrar-auditoria
#### PRODUCCION ####
pro.registrarAudit.url = http://localhost:7003/microservices/pro/registrar-auditoria


################################################################################################################
##                                          Mensajes de respuestas                                            ##
################################################################################################################

#### OK
res.0000 = Operacion Exitosa.
res.0001 = Operacion Exitosa.La consulta no arrojo resultado.

#### UNPROCESSABLE_ENTITY
res.1000 = Campo idSesion vacio , nulo o invalido
res.1001 = Campo idUsuario vacio , nulo o invalido
res.1002 = Campo codUsuario vacio , nulo o invalido
res.1003 = Campo Objeto tasa vacio , nulo o invalido
res.1004 = Campo codMonedaOrigen vacio , nulo o invalido
res.1005 = Campo codMonedaDestino vacio , nulo o invalido
res.1006 = Campo monto vacio , nulo o invalido
res.1007 = Campo flagActivo vacio , nulo o invalido
res.1008 = Campo canal vacio , nulo o invalido

#### UNPROCESSABLE_ENTITY
#res.1009 = Campo codMonedaOrigen vacio , nulo o invalido
#res.1010 = Campo codMonedaDestino vacio , nulo o invalido
#res.1011 = Campo monto vacio , nulo o invalido

##BAD REQUEST
res.2000 = La tasa a Actualizar NO existe.
res.2001 = Ya existe una tasa para las monedas indicadas.
res.2003 = El codMonedaOrigen a Crear Tasa No existe.
res.2004 = El codMonedaOrigen igual a codMonedaDestino, no puede crear tasa de una moneda asi misma.
res.2005 = El codMonedaDestino a Crear Tasa No existe.
res.2006 = Ya existe una tasa inversa para las monedas indicadas.
#res.2007 = Ya existe una tasa inversa para las monedas indicadas.
#res.2008 = La tasa a Actualizar NO existe.

##### Internal Server Error.
res.6000 = Error General: @@Error
res.6001 = Error insertar / actualizar registro BD tabla Tasas @@Error
res.6002 = Error BD: @@Error




